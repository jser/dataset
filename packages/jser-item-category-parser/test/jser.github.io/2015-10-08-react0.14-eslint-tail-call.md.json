{
    "meta": {
        "title": "2015-10-08のJS: React 0.14、ESLintの使い方、ES6の末尾呼び出し最適化",
        "author": "azu",
        "layout": "post",
        "date": "2015-10-08T22:51:00.000Z",
        "category": "JSer",
        "tags": [
            "React",
            "ESLint",
            "ES6"
        ]
    },
    "items": [
        {
            "category": "Headline",
            "title": "React v0.14 | React",
            "url": "http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html",
            "tags": [
                "React",
                "ReleaseNote"
            ],
            "content": "React 0.14の正式版リリース。\n`react`と`react-dom`へのパッケージの分割、`refs`の仕様変更、ステートレスコンポーネントの追加、react-toolsが非推奨となるなど",
            "relatedLinks": [
                {
                    "title": "React.js v0.14 changes - blog.koba04.com",
                    "url": "http://blog.koba04.com/post/2015/09/22/react-js-v014-changes/"
                }
            ]
        },
        {
            "category": "Headline",
            "title": "Video.js Blog - Video.js 5: The Only Thing That’s Changed Is...",
            "url": "http://blog.videojs.com/post/130143694631/video-js-5",
            "tags": [
                "JavaScript",
                "library",
                "動画",
                "ReleaseNote"
            ],
            "content": "Video.js 5リリース。\nES6で書き直し、LessからSassへ移行、HLSをFlashなしでサポート、アクセシビリティの改善、pluginへの設定の渡し方を変更、CDNにFastlyを利用するようになるなど",
            "relatedLinks": []
        },
        {
            "category": "Headline",
            "title": "Release v2.3.0 · jscs-dev/node-jscs",
            "url": "https://github.com/jscs-dev/node-jscs/releases/tag/v2.3.0",
            "tags": [
                "JavaScript",
                "Tools",
                "ReleaseNote"
            ],
            "content": "JSCS 2.3.0リリース。\n`disallowIdenticalDestructuringNames`、`disallowNestedTernaries`、`requireSpaceAfterComma`のルールを追加",
            "relatedLinks": []
        },
        {
            "category": "Headline",
            "title": "Node v4.1.2 (Stable) | Node.js",
            "url": "https://nodejs.org/en/blog/release/v4.1.2/",
            "tags": [
                "node.js",
                "ReleaseNote",
                "セキュリティ"
            ],
            "content": "Node.js 4.1.2リリース。\nio.js 3.x以降にあるhttp serverのDoSに関するセキュリティ修正を含む。",
            "relatedLinks": [
                {
                    "title": "http: fix out-of-order ",
                    "url": "https://github.com/nodejs/node/commit/05040664c2035b8abffb7bd7bb3243af35895130"
                }
            ]
        },
        {
            "category": "Headline",
            "title": "ESLint v1.6.0 released - ESLint - Pluggable JavaScript linter",
            "url": "http://eslint.org/blog/2015/10/eslint-v1.6.0-released/",
            "tags": [
                "JavaScript",
                "Tools",
                "ReleaseNote"
            ],
            "content": "ESLint v1.6.0リリース。\n`--fix`対応のルールを追加、`no-undef`ルールに`typeof`オプションの追加、`env`に`nashorn`を追加など",
            "relatedLinks": []
        },
        {
            "category": "Headline",
            "title": "Ember.js - Ember.js 2.1 and 2.2 Beta Released",
            "url": "http://emberjs.com/blog/2015/10/04/ember-2-1-released.html",
            "tags": [
                "JavaScript",
                "library"
            ],
            "content": "Ember.js 2.1と2.2βリリース。",
            "relatedLinks": []
        },
        {
            "category": "Headline",
            "title": "protractor/CHANGELOG.md at 2.5.0 · angular/protractor",
            "url": "https://github.com/angular/protractor/blob/2.5.0/CHANGELOG.md",
            "tags": [
                "JavaScript",
                "testing",
                "E2E",
                "ReleaseNote"
            ],
            "content": "Protractor 2.5.0リリース。\nAngularJS 2のサポート、`useAllAngularAppRoots`オプションの追加",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "ESLint: The Next-Generation JavaScript Linter – Smashing Magazine",
            "url": "http://www.smashingmagazine.com/2015/09/eslint-the-next-generation-javascript-linter/",
            "tags": [
                "JavaScript",
                "Tools"
            ],
            "content": "ESLintの使い方、設定方法、プラグインについてなどの解説記事",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "エディタの実装をcycle.jsでMVIベースにしてみた話 - ✘╹◡╹✘",
            "url": "http://r7kamura.hatenablog.com/entry/2015/10/04/062333",
            "tags": [
                "JavaScript",
                "Rx",
                "設計"
            ],
            "content": "cycle.jsのアーキテクチャについて。\n「イベントソースを受け取ってイベントソースを返す関数」がどのように使われてるのか、MVIとはどういう責務での分離なのかについて。",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Asynchronous code gets easier with ES2016 Async Function support in Chakra and Microsoft Edge | Microsoft Edge Dev Blog",
            "url": "http://blogs.windows.com/msedgedev/2015/09/30/asynchronous-code-gets-easier-with-es2016-async-function-support-in-chakra-and-microsoft-edge/",
            "tags": [
                "ECMAScript",
                "MSEdge"
            ],
            "content": "MSEdgeにフラグ付きで実装されてるasync/awaitについての記事。\nasync/awaitを使うことでどのように書けるか、動作原理やどのように実装されてるかについての解説",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "JavaScript - 末尾再帰による最適化 - Qiita",
            "url": "http://qiita.com/pebblip/items/cf8d3230969b2f6b3132",
            "tags": [
                "ECMAScript",
                "JavaScript"
            ],
            "content": "ES6の末尾呼び出し最適化の仕組みについて。\nそもそもなぜスタックオーバーフローが起きるのか、コールスタックとは何か、どのように最適化が行われるのか、再帰関数のパターンについてよくまとまっている。",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Customizing ES6 via well-known symbols",
            "url": "http://www.2ality.com/2015/09/well-known-symbols-es6.html",
            "tags": [
                "ECMAScript",
                "JavaScript"
            ],
            "content": "`Symbol`にデフォルトで定義されているwell-known symbolsの使い方について。\nECMAScriptのネイティブのメソッドはwell-known symbolsを参照するため、\nそれらのメソッドの対象となったオブジェクトの扱いを設定することが出来るという利用方法について。",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Immutable Data Structures and JavaScript",
            "url": "http://jlongster.com/Using-Immutable-Data-Structures-in-JavaScript",
            "tags": [
                "JavaScript",
                "library"
            ],
            "content": "JavaScriptにおけるimmutableについて。\nReduxなどを使う際にImmutableオブジェクトが欲しくなるが、現状ではJS自体にはその仕様はない。\nそのため、Immutable.jsやseamless-immutableなどのライブラリを使って実現するメリットとデメリットについて",
            "relatedLinks": []
        },
        {
            "category": "SlideVideo",
            "title": "BrazilJS 2015 - YouTube",
            "url": "https://www.youtube.com/playlist?list=PLg2lQYZDBwORUpJTu5MxI71iEQIyc_Lno",
            "tags": [
                "JavaScript",
                "イベント",
                "動画"
            ],
            "content": "BrazilJS 2015の動画まとめ",
            "relatedLinks": [
                {
                    "title": "BrazilJS",
                    "url": "http://braziljs.com.br/"
                }
            ]
        },
        {
            "category": "WebsiteDocument",
            "title": "relax/relax",
            "url": "https://github.com/relax/relax",
            "tags": [
                "node.js",
                "React",
                "CMS"
            ],
            "content": "Node.jsとReactで作られてるCMS",
            "relatedLinks": []
        },
        {
            "category": "WebsiteDocument",
            "title": "staltz/flux-challenge",
            "url": "https://github.com/staltz/flux-challenge",
            "tags": [
                "Flux",
                "サンプル"
            ],
            "content": "Fluxアーキテクチャを使って実装する問題と回答のリポジトリ。\n`submissions/`以下にそれぞれの回答があり、色々なFluxを使った実装が見られる。",
            "relatedLinks": []
        },
        {
            "category": "WebsiteDocument",
            "title": "Accelerated Mobile Pages Project",
            "url": "https://www.ampproject.org/",
            "tags": [
                "HTML",
                "spec"
            ],
            "content": "AMP HTMLというHTMLのサブセットの定義に則る事で、モバイルでも高速なページの表示が行える事を目的とした規格やライブラリ",
            "relatedLinks": [
                {
                    "title": "Official Google Blog: Introducing the Accelerated Mobile Pages Project, for a faster, open mobile web",
                    "url": "https://googleblog.blogspot.jp/2015/10/introducing-accelerated-mobile-pages.html"
                },
                {
                    "title": "Accelerated Mobile Pages – A new approach to web performance",
                    "url": "https://www.ampproject.org/how-it-works/"
                },
                {
                    "title": "AMP HTML (Accelerated Mobile Pages) demo - YouTube",
                    "url": "https://www.youtube.com/watch?v=i2_lAEzmOPo"
                }
            ]
        },
        {
            "category": "SoftwareLibrary",
            "title": "jeffbski/wait-on · GitHub",
            "url": "https://github.com/jeffbski/wait-on",
            "tags": [
                "node.js",
                "library",
                "console",
                "Tools"
            ],
            "content": "色々な待ちパターンを行えるNode.js製のコマンドラインツール。 ファイルの存在確認、HTTP HEAD/GET、TCP、Socketのレスポンス待ちなどを行える",
            "relatedLinks": []
        },
        {
            "category": "SoftwareLibrary",
            "title": "documentationjs",
            "url": "http://documentation.js.org/",
            "tags": [
                "JavaScript",
                "document"
            ],
            "content": "JSDocと同じフォーマットをサポートしたドキュメント生成ツール。\nJSON、HTML、Markdownとして出力できる。",
            "relatedLinks": []
        },
        {
            "category": "Book",
            "title": "O&#x27;Reilly Japan - JavaScriptによるデータビジュアライゼーション入門",
            "url": "http://www.oreilly.co.jp/books/9784873117461/",
            "tags": [
                "JavaScript",
                "d3.js",
                "book"
            ],
            "content": "2015年10月21日発売\nJavaScriptによるデータの可視化についての書籍",
            "relatedLinks": []
        }
    ]
}