{
    "meta": {
        "title": "2017-05-30のJS: npm 5.0.0プレリリースとNode.js 8.0.0、Chrome 60の開発者ツール",
        "author": "azu",
        "layout": "post",
        "date": "Tue, 30 May 2017 00:11:15 GMT",
        "category": "JSer",
        "tags": [
            "npm",
            "Node.js",
            "yarn",
            "Chrome"
        ]
    },
    "items": [
        {
            "category": "Headline",
            "title": "\\[WIP\\] 8.0.0 Release Proposal by jasnell · Pull Request #12220 · nodejs/node",
            "url": "https://github.com/nodejs/node/pull/12220#issuecomment-303699926",
            "tags": [
                "node.js",
                "ReleaseNote"
            ],
            "content": "Node.js 8.0.0 RC1リリース",
            "relatedLinks": []
        },
        {
            "category": "Headline",
            "title": "Release v5.0.0 · npm/npm",
            "url": "https://github.com/npm/npm/releases/tag/v5.0.0",
            "tags": [
                "ReleaseNote",
                "npm"
            ],
            "content": "npm v5.0.0プレリリース。 ローカルパスのnpm installはsymlinkとなるように、`--save`がデフォルト化、Gitで依存してるモジュールも`prepare`が呼ばれるように、`package-lock.json`の導入、インストール速度の改善、`--offline`、`sha512`のサポートなど",
            "relatedLinks": [
                {
                    "title": "npm v5 がリリースされた - from scratch",
                    "url": "http://yosuke-furukawa.hatenablog.com/entry/2017/05/30/090602"
                }
            ]
        },
        {
            "category": "Article",
            "title": "All About Recursion, PTC, TCO and STC in JavaScript",
            "url": "http://lucasfcosta.com/2017/05/08/All-About-Recursion-PTC-TCO-and-STC-in-JavaScript.html",
            "tags": [
                "JavaScript",
                "ECMAScript",
                "article"
            ],
            "content": "JavaScriptの末尾呼び出し最適化についての解説記事。\nProper Tail Calls (PTC)、Syntactic Tail Calls (STC)について",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Altering the DOM with JavaScript | Zell Liew",
            "url": "https://zellwk.com/blog/js-in-dom/",
            "tags": [
                "DOM",
                "JavaScript",
                "tutorial"
            ],
            "content": "DOM APIの基本的な使い方のついての記事。\n`querySelector`での要素選択、`addEventListener`でのイベント登録、`classList`でのクラス処理、要素の追加/更新などについて",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "TypeScriptのInterfaceとType aliasの比較 - Qiita",
            "url": "http://qiita.com/tkrkt/items/d01b96363e58a7df830e",
            "tags": [
                "TypeScript"
            ],
            "content": "TypeScriptの`interface`と`type` aliasについての比較まとめ",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Node.js Streams: Everything you need to know – freeCodeCamp",
            "url": "https://medium.freecodecamp.com/node-js-streams-everything-you-need-to-know-c9141306be93",
            "tags": [
                "node.js",
                "stream",
                "article"
            ],
            "content": "Node.jsのStreamについての解説記事",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "What's New In DevTools (Chrome 60)  |  Web  |  Google Developers",
            "url": "https://developers.google.com/web/updates/2017/05/devtools-release-notes",
            "tags": [
                "Chrome",
                "debug",
                "article"
            ],
            "content": "Chrome 60の開発者ツールについて。\nAuditがLighthouseを使ったものに変更。\nthird party badgesの表示、ブレークポイントでContinue to hereの追加、コードカバレッジ表示の改善、Asyncスタックトレースがデフォルト化など",
            "relatedLinks": [
                {
                    "title": "GoogleChrome/lighthouse: Auditing, performance metrics, and best practices for Progressive Web Apps",
                    "url": "https://github.com/GoogleChrome/lighthouse"
                }
            ]
        },
        {
            "category": "Article",
            "title": "Using Fetch | CSS-Tricks",
            "url": "https://css-tricks.com/using-fetch/",
            "tags": [
                "JavaScript",
                "tutorial",
                "article"
            ],
            "content": "Fetch APIの使い方についての解説。\nデータの取得、エラーハンドリング、レスポンスの処理、FetchのラッパーであるzlFetchについて",
            "relatedLinks": []
        },
        {
            "category": "Article",
            "title": "Event Bubbling in JavaScript? Event Propagation Explained",
            "url": "https://www.sitepoint.com/event-bubbling-javascript/",
            "tags": [
                "DOM",
                "event",
                "article"
            ],
            "content": "DOMのイベントバブリングとキャプチャフェーズについての解説。\n`target`、`currentTarget`、`eventPhasee`を使ってイベントの動きを可視化してる",
            "relatedLinks": []
        },
        {
            "category": "SlideVideo",
            "title": "ReactEurope 2017 - Day 1 - YouTube",
            "url": "http://www.youtube.com/playlist?list=PLCC436JpVnK3ruJeDWd-xWIMb0l47VcxD",
            "tags": [
                "React",
                "イベント",
                "video"
            ],
            "content": "ReactEurope 2017の動画一覧",
            "relatedLinks": [
                {
                    "title": "ReactEurope 2017 - Day 2 - YouTube",
                    "url": "https://www.youtube.com/playlist?list=PLCC436JpVnK3KpieWtxYN6aC2-exR_IxH"
                },
                {
                    "title": "Lightning Talks 2017 - YouTube",
                    "url": "https://www.youtube.com/playlist?list=PLCC436JpVnK25dtw5NX7yNhzBa2lPwN05"
                }
            ]
        },
        {
            "category": "SlideVideo",
            "title": "What I Learned Benchmarking React - Dominic Gannaway aka @trueadm at @ReactEurope 2017 - YouTube",
            "url": "https://www.youtube.com/watch?v=djOc1EK07Tk",
            "tags": [
                "JavaScript",
                "library",
                "performance",
                "video"
            ],
            "content": "JavaScriptライブラリのベンチマーク結果を改善する方法について。\nRollupを使ってflat bundleすることでサイズとロード時間の削減、使わないモジュールの削除、ベンチマークツールについて。\nlighthouseを使ったモジュールのベンチマークについて",
            "relatedLinks": [
                {
                    "title": "react/benchmark.js at f0df495f9a97c0f24a3c20761244dab7da99bd77 · facebook/react",
                    "url": "https://github.com/facebook/react/blob/f0df495f9a97c0f24a3c20761244dab7da99bd77/scripts/bench/benchmark.js"
                }
            ]
        },
        {
            "category": "SlideVideo",
            "title": "Keynote - Andrew Clark aka @acdlite at @ReactEurope 2017 - YouTube",
            "url": "https://www.youtube.com/watch?v=QW5TE4vrklU",
            "tags": [
                "React",
                "video"
            ],
            "content": "Reactの今後のロードマップについての発表。\nReact v16ではFragmentsサポート、Portal、Fiber(opt-in)、エラーハンドリングの強化が行われる。\nそれ以降は可視領域の優先度スケジューラ、Code Spilittingの改善など",
            "relatedLinks": []
        },
        {
            "category": "SlideVideo",
            "title": "How Streaming Can Supercharge React - Sasha Aickin aka @xander76 at ReactEurope 2017 - YouTube",
            "url": "https://www.youtube.com/watch?v=UhdGiVy3_Nk",
            "tags": [
                "React",
                "サーバー",
                "video",
                "performance"
            ],
            "content": "Reactとサーバサイドレンダリングについての発表動画。\nSSRには表示を早くするメリットがあるがTTIは長くなる問題がある。\nこれを解決するために、一定のブロックでコンポーネントをプログレッシブにレンダリングすることでTTIを改善する案について。\nまた、Reactに`ReactDOMServerStream`が追加されたことについて。",
            "relatedLinks": [
                {
                    "title": "deepanjanroy/tti-polyfill: Polyfill for Time to Interactive",
                    "url": "https://github.com/deepanjanroy/tti-polyfill"
                },
                {
                    "title": "HTTP2 を前提とした HTML+CSS コンポーネントのレンダリングパス最適化について | blog.jxck.io",
                    "url": "https://blog.jxck.io/entries/2016-02-15/loading-css-over-http2.html"
                },
                {
                    "title": "Add package builds for new server renderer and enable tests by sebmarkbage · Pull Request #9710 · facebook/react",
                    "url": "https://github.com/facebook/react/pull/9710"
                }
            ]
        },
        {
            "category": "SlideVideo",
            "title": "ECMAScript 2017: what’s new for JavaScript? // Speaker Deck",
            "url": "https://speakerdeck.com/rauschma/ecmascript-2017-whats-new-for-javascript",
            "tags": [
                "ECMAScript",
                "slide"
            ],
            "content": "ECMAScriptのProposalのプロセスとES2017についてのスライド。\nES2017で追加されるAsync Function、Shared Array Buffer、Object/Stringの追加メソッド、関数の引数における末尾カンマの許容について。\nまた現在Proposal段階の仕様の紹介",
            "relatedLinks": [
                {
                    "title": "tc39/proposals: Tracking ECMAScript Proposals",
                    "url": "https://github.com/tc39/proposals"
                }
            ]
        },
        {
            "category": "SlideVideo",
            "title": "CSS and the First Meaningful Paint - Sessions by Pusher",
            "url": "https://pusher.com/sessions/meetup/london-css/css-and-the-first-meaningful-paint",
            "tags": [
                "CSS",
                "performance",
                "video",
                "browser",
                "HTTP2"
            ],
            "content": "CSSとFirst meaningful paintについての発表動画。\nInline CSSのメリット/デメリット、RTTとレイテンシー、クリティカルパスなリソースについて。\nリソースのpreload、Server Pushについて",
            "relatedLinks": []
        },
        {
            "category": "WebsiteDocument",
            "title": "ngryman/speedracer: Collect performance metrics for your library/application.",
            "url": "https://github.com/ngryman/speedracer",
            "tags": [
                "browser",
                "Chrome",
                "performance",
                "Tools"
            ],
            "content": "Chrome DevTools protocolを使いCLIでページの表示にかかる時間などのパフォーマンステストを行えるツール",
            "relatedLinks": []
        },
        {
            "category": "WebsiteDocument",
            "title": "What does my npm module cost?",
            "url": "https://cost-of-modules.herokuapp.com/",
            "tags": [
                "webservice",
                "npm",
                "Tools"
            ],
            "content": "npmパッケージのサイズ/gzip、ダウンロードにかかる時間や依存などを表示してくれるサービス",
            "relatedLinks": []
        },
        {
            "category": "SoftwareLibrary",
            "title": "photopea/UPNG.js: Fast and advanced PNG encoder (lossy / lossless) and decoder",
            "url": "https://github.com/photopea/UPNG.js",
            "tags": [
                "JavaScript",
                "library"
            ],
            "content": "小さなPNGエンコード/デコードライブラリ",
            "relatedLinks": []
        },
        {
            "category": "SoftwareLibrary",
            "title": "scssfmt - Standard SCSS code formatter",
            "url": "http://scssfmt.com/",
            "tags": [
                "Sass",
                "Tools",
                "CSS",
                "console"
            ],
            "content": "sass(SCSS)のコード整形ツール",
            "relatedLinks": []
        },
        {
            "category": "SoftwareLibrary",
            "title": "developit/preact-cli: 😺 Your next Preact PWA starts in 30 seconds.",
            "url": "https://github.com/developit/preact-cli",
            "tags": [
                "JavaScript",
                "Tools",
                "library"
            ],
            "content": "preactのCLIツール。\npreactを使ったScaffoldingツールで、create/build/watch/serveなどの開発用のサブコマンドを持っている",
            "relatedLinks": []
        }
    ]
}